(()=>{var e={};e.id=67,e.ids=[67],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},43156:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>c,maxDuration:()=>u});var a=r(52721),n=r(91790),i=r(2149),o=r(7225),p=r(89256);let u=30;async function c(e){let{messages:t,newsCaptions:r}=await e.json(),s=(0,o.w)("llama-3.3-70b-versatile"),a=`
    You are an AI assistant tasked with analyzing news titles (captions) and user prompts to derive categories. 
    - If news captions are provided, analyze them and return a list of derived categories (e.g., "tech", "sports", "politics").
    - If a user prompt is provided in the messages, analyze it to identify preferred categories and return them.
    - Return the result as a JSON object with a "categories" field containing an array of category strings.
    - Do not include explanations, just the JSON result.
  `;return(await (0,p.gM)({model:s,system:a,messages:[...r?[{role:"user",content:`Analyze these news captions: ${JSON.stringify(r)}`}]:[],...t]})).toDataStreamResponse()}let d=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/perference/route",pathname:"/api/perference",filename:"route",bundlePath:"app/api/perference/route"},resolvedPagePath:"/Users/prince/Documents/Github/zetoe/src/frontend/src/app/api/perference/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:m}=d;function f(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}},91106:()=>{},25610:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[149,312],()=>r(43156));module.exports=s})();